{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyNYugnsaQvbbzwy1blM6ZTB",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Balasrihari/Balasrihari/blob/main/BFS%20USING%20AI\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ZATXw0PHU_xG",
        "outputId": "23a54c8e-47c6-4aa6-f4b9-94d04c07b521"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the number of nodes: 12\n",
            "Enter the maximum number of children per node: 3\n",
            "\n",
            "BFS Traversal Order: \n",
            "Initial Queue: ['A']\n",
            "\n",
            "Dequeued: A\n",
            "Queue after dequeue: []\n",
            "Enqueued: B\n",
            "Queue after enqueue: ['B']\n",
            "Enqueued: C\n",
            "Queue after enqueue: ['B', 'C']\n",
            "Enqueued: D\n",
            "Queue after enqueue: ['B', 'C', 'D']\n",
            "Dequeued: B\n",
            "Queue after dequeue: ['C', 'D']\n",
            "Enqueued: E\n",
            "Queue after enqueue: ['C', 'D', 'E']\n",
            "Enqueued: F\n",
            "Queue after enqueue: ['C', 'D', 'E', 'F']\n",
            "Enqueued: G\n",
            "Queue after enqueue: ['C', 'D', 'E', 'F', 'G']\n",
            "Dequeued: C\n",
            "Queue after dequeue: ['D', 'E', 'F', 'G']\n",
            "Enqueued: H\n",
            "Queue after enqueue: ['D', 'E', 'F', 'G', 'H']\n",
            "Enqueued: I\n",
            "Queue after enqueue: ['D', 'E', 'F', 'G', 'H', 'I']\n",
            "Enqueued: J\n",
            "Queue after enqueue: ['D', 'E', 'F', 'G', 'H', 'I', 'J']\n",
            "Dequeued: D\n",
            "Queue after dequeue: ['E', 'F', 'G', 'H', 'I', 'J']\n",
            "Enqueued: K\n",
            "Queue after enqueue: ['E', 'F', 'G', 'H', 'I', 'J', 'K']\n",
            "Enqueued: L\n",
            "Queue after enqueue: ['E', 'F', 'G', 'H', 'I', 'J', 'K', 'L']\n",
            "Dequeued: E\n",
            "Queue after dequeue: ['F', 'G', 'H', 'I', 'J', 'K', 'L']\n",
            "Dequeued: F\n",
            "Queue after dequeue: ['G', 'H', 'I', 'J', 'K', 'L']\n",
            "Dequeued: G\n",
            "Queue after dequeue: ['H', 'I', 'J', 'K', 'L']\n",
            "Dequeued: H\n",
            "Queue after dequeue: ['I', 'J', 'K', 'L']\n",
            "Dequeued: I\n",
            "Queue after dequeue: ['J', 'K', 'L']\n",
            "Dequeued: J\n",
            "Queue after dequeue: ['K', 'L']\n",
            "Dequeued: K\n",
            "Queue after dequeue: ['L']\n",
            "Dequeued: L\n",
            "Queue after dequeue: []\n",
            "A -> B -> C -> D -> E -> F -> G -> H -> I -> J -> K -> L\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import networkx as nx  # Import NetworkX for graph operations and visualization\n",
        "import matplotlib.pyplot as plt  # Import Matplotlib for graph visualization\n",
        "from collections import deque  # Import deque for efficient queue implementation\n",
        "import string  # Import string to generate alphabetical labels for tree nodes\n",
        "\n",
        "# Class to represent a general tree structure\n",
        "class Tree:\n",
        "    def __init__(self, num_nodes, max_children):\n",
        "        \"\"\"\n",
        "        Initialize the tree with the total number of nodes and maximum number of children per node.\n",
        "        Args:\n",
        "            num_nodes (int): Total number of nodes in the tree.\n",
        "            max_children (int): Maximum number of children each node can have.\n",
        "        \"\"\"\n",
        "        self.num_nodes = num_nodes  # Store the total number of nodes\n",
        "        self.max_children = max_children  # Store the maximum number of children per node\n",
        "        self.graph = {}  # Initialize an empty dictionary to represent the tree as an adjacency list\n",
        "        self.labels = self.generate_labels(num_nodes)  # Generate unique labels for all nodes\n",
        "        self.build_tree()  # Construct the tree using the specified structure\n",
        "\n",
        "    def generate_labels(self, num_labels):\n",
        "        \"\"\"\n",
        "        Generate unique alphabetical labels for the nodes (e.g., A, B, ..., Z, AA, AB, ...).\n",
        "        Args:\n",
        "            num_labels (int): Total number of labels to generate.\n",
        "        Returns:\n",
        "            List of labels for the nodes.\n",
        "        \"\"\"\n",
        "        labels = []  # Initialize an empty list to store labels\n",
        "        for i in range(num_labels):  # Iterate through the range of node indices\n",
        "            label = \"\"  # Start with an empty label\n",
        "            num = i  # Initialize the number corresponding to the label\n",
        "            while num >= 0:  # Convert the number to a label using a base-26 system\n",
        "                label = string.ascii_uppercase[num % 26] + label  # Append the corresponding letter\n",
        "                num = num // 26 - 1  # Update the number for the next iteration\n",
        "            labels.append(label)  # Add the generated label to the list\n",
        "        return labels  # Return the list of labels\n",
        "\n",
        "    def build_tree(self):\n",
        "        \"\"\"\n",
        "        Build the tree as an adjacency list based on the specified number of nodes and maximum children.\n",
        "        \"\"\"\n",
        "        for i in range(self.num_nodes):  # Iterate through each node\n",
        "            self.graph[self.labels[i]] = []  # Initialize an empty list for the node's children\n",
        "            for j in range(1, self.max_children + 1):  # Iterate to add up to `max_children` children\n",
        "                child_index = self.max_children * i + j  # Calculate the index of the child node\n",
        "                if child_index < self.num_nodes:  # Check if the child index is within bounds\n",
        "                    self.graph[self.labels[i]].append(self.labels[child_index])  # Add the child to the adjacency list\n",
        "\n",
        "    def bfs(self, start_node):\n",
        "        \"\"\"\n",
        "        Perform Breadth-First Search (BFS) traversal starting from the given node.\n",
        "        Args:\n",
        "            start_node (str): The label of the start node for BFS.\n",
        "        Returns:\n",
        "            List of nodes in the order they are visited during BFS.\n",
        "        \"\"\"\n",
        "        visited = set()  # Create a set to track visited nodes\n",
        "        queue = deque([start_node])  # Initialize a queue with the start node\n",
        "        visited.add(start_node)  # Mark the start node as visited\n",
        "        traversal_order = []  # List to store the order of traversal\n",
        "\n",
        "        print(f\"Initial Queue: {list(queue)}\\n\")  # Debug: Print the initial state of the queue\n",
        "\n",
        "        while queue:  # Continue while there are nodes in the queue\n",
        "            node = queue.popleft()  # Dequeue the front node from the queue\n",
        "            traversal_order.append(node)  # Add the dequeued node to the traversal order\n",
        "\n",
        "            print(f\"Dequeued: {node}\")  # Debug: Print the dequeued node\n",
        "            print(f\"Queue after dequeue: {list(queue)}\")  # Debug: Print the queue state after dequeuing\n",
        "\n",
        "            for neighbor in self.graph[node]:  # Iterate through the neighbors of the current node\n",
        "                if neighbor not in visited:  # Check if the neighbor has not been visited\n",
        "                    visited.add(neighbor)  # Mark the neighbor as visited\n",
        "                    queue.append(neighbor)  # Enqueue the neighbor for future traversal\n",
        "                    print(f\"Enqueued: {neighbor}\")  # Debug: Print the enqueued node\n",
        "                    print(f\"Queue after enqueue: {list(queue)}\")  # Debug: Print the queue state after enqueueing\n",
        "\n",
        "        return traversal_order  # Return the list of nodes in BFS traversal order\n",
        "\n",
        "    def visualize(self):\n",
        "        \"\"\"\n",
        "        Visualize the tree using NetworkX and Matplotlib.\n",
        "        \"\"\"\n",
        "        G = nx.Graph()  # Create a new NetworkX graph object\n",
        "\n",
        "        # Add edges to the graph based on the adjacency list\n",
        "        for node in self.graph:\n",
        "            for neighbor in self.graph[node]:\n",
        "                G.add_edge(node, neighbor)  # Add an edge between the node and its neighbor\n",
        "\n",
        "        # Generate a custom layout for hierarchical visualization of the tree\n",
        "        pos = self.custom_tree_layout(G)\n",
        "\n",
        "        # Draw the tree using Matplotlib\n",
        "        plt.figure(figsize=(12, 10))  # Set the figure size for better visibility\n",
        "        nx.draw(G, pos, with_labels=True, node_size=700, node_color='skyblue',\n",
        "                font_size=10, font_weight='bold', width=2)  # Draw the graph with customized styles\n",
        "        plt.title(\"Tree Visualization\")  # Set the title of the plot\n",
        "        plt.axis('off')  # Hide axes for cleaner visualization\n",
        "        plt.show()  # Display the visualization\n",
        "\n",
        "    def custom_tree_layout(self, G):\n",
        "        \"\"\"\n",
        "        Create a hierarchical layout for the tree based on BFS levels.\n",
        "        Args:\n",
        "            G (nx.Graph): The NetworkX graph object representing the tree.\n",
        "        Returns:\n",
        "            Dictionary of positions for nodes to be used in visualization.\n",
        "        \"\"\"\n",
        "        pos = {}  # Initialize a dictionary to store node positions\n",
        "\n",
        "        # Assign levels to nodes using BFS\n",
        "        level = {self.labels[0]: 0}  # Start with the root node at level 0\n",
        "        queue = deque([self.labels[0]])  # Initialize a queue for BFS traversal\n",
        "\n",
        "        while queue:  # Continue while there are nodes in the queue\n",
        "            node = queue.popleft()  # Dequeue the front node\n",
        "            current_level = level[node]  # Get the level of the dequeued node\n",
        "            for child in self.graph[node]:  # Iterate through the node's children\n",
        "                if child not in level:  # If the child is not yet assigned a level\n",
        "                    level[child] = current_level + 1  # Assign the child to the next level\n",
        "                    queue.append(child)  # Enqueue the child\n",
        "\n",
        "        # Group nodes by their levels\n",
        "        pos_by_level = {}\n",
        "        for node in level:\n",
        "            current_level = level[node]\n",
        "            if current_level not in pos_by_level:\n",
        "                pos_by_level[current_level] = []\n",
        "            pos_by_level[current_level].append(node)\n",
        "\n",
        "        # Calculate positions for nodes within each level\n",
        "        final_pos = {}\n",
        "        max_width = self.max_children ** (max(level.values()))  # Calculate the maximum width for the layout\n",
        "\n",
        "        for level_num, nodes in pos_by_level.items():\n",
        "            y = -level_num * 5  # Set vertical spacing based on level\n",
        "            level_width = len(nodes)\n",
        "            x_offset = max_width // (level_width + 1)  # Set horizontal spacing within the level\n",
        "\n",
        "            for i, node in enumerate(nodes):\n",
        "                x = (i - (level_width - 1) / 2) * x_offset  # Center nodes horizontally\n",
        "                final_pos[node] = (x, y)  # Assign position to the node\n",
        "\n",
        "        return final_pos  # Return the positions dictionary\n",
        "\n",
        "# Main function to create and explore the tree\n",
        "def create_tree_and_bfs():\n",
        "    \"\"\"\n",
        "    Prompt the user for input to create the tree and perform BFS traversal.\n",
        "    \"\"\"\n",
        "    num_nodes = int(input(\"Enter the number of nodes: \"))  # Ask the user for the total number of nodes\n",
        "    max_children = int(input(\"Enter the maximum number of children per node: \"))  # Ask for the maximum children\n",
        "\n",
        "    tree = Tree(num_nodes, max_children)  # Create the tree with the given parameters\n",
        "\n",
        "    # Perform BFS starting from the root node 'A'\n",
        "    print(\"\\nBFS Traversal Order: \")\n",
        "    bfs_order = tree.bfs('A')  # Perform BFS starting from the root node\n",
        "    print(\" -> \".join(bfs_order))  # Print the BFS traversal order\n",
        "\n",
        "    # Visualize the tree\n",
        "    tree.visualize()  # Generate a graphical representation of the tree\n",
        "\n",
        "# Entry point of the program\n",
        "if __name__ == \"__main__\":\n",
        "    create_tree_and_bfs()  # Call the main function to execute the program"
      ]
    }
  ]
}